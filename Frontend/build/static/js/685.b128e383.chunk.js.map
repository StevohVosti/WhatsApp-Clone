{"version":3,"file":"static/js/685.b128e383.chunk.js","mappings":"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","sources":["Components/drawer/Profile.jsx","Components/drawer/Drawer.jsx","Components/Chat/menu/HeaderMenu.jsx","Components/Chat/menu/Header.jsx","Components/Chat/menu/Search.jsx","Service/api.jsx","utils/common-utils.js","Components/Chat/menu/Conversation.jsx","Constants/data.js","Components/Chat/menu/Conversations.jsx","Components/Chat/menu/Menu.jsx","Components/Chat/Chat/ChatHeader.jsx","Components/Chat/Chat/Message.jsx","Components/Chat/Chat/Footer.jsx","Components/Chat/Chat/Messages.jsx","Components/Chat/Chat/ChatBox.jsx","Components/Chat/Chat/EmptyChat.jsx","Components/Chat/ChatDialog.jsx","Components/account/LoginDialog.jsx","Components/Messenger.jsx"],"sourcesContent":["import { useContext } from \"react\";\r\nimport { Box, styled, Typography } from \"@mui/material\"\r\n\r\nimport { AccountContext } from \"../../Context/AccountProvider\";\r\n\r\nconst ImageContainer = styled(Box)`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Image = styled('img') ({\r\n    width: 200,\r\n    height: 200,\r\n    borderRadius: '50%',\r\n    padding: '25px 0'\r\n});\r\n\r\nconst BoxWrapper = styled(Box)`\r\n    background: #FFFFFF;\r\n    padding: 12px 30px 2px;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);\r\n    & :first-child {\r\n        font-size: 13px;\r\n        color: #009688;\r\n        font-weight: 200;\r\n    };\r\n    & :last-child {\r\n        margin: 14px 0;\r\n        color: #4A4A4A;\r\n    }\r\n`;\r\n\r\nconst DescriptionContainer = styled(Box)`\r\n    padding: 15px 20px 28px 30px;\r\n    & > p {\r\n        color: #8696a0;\r\n        font-size: 13px;\r\n    }\r\n`;\r\n\r\nconst Profile = () => {\r\n\r\n    const { account } = useContext(AccountContext);\r\n\r\n    return (\r\n        <>\r\n            <ImageContainer>\r\n                <Image src={account.picture} alt=\"displaypicture\" />\r\n            </ImageContainer>\r\n            <BoxWrapper>\r\n                <Typography>Your name</Typography>\r\n                <Typography>{account.name}</Typography>\r\n            </BoxWrapper>\r\n            <DescriptionContainer>\r\n                <Typography>This is not your username or pin. This name will be visible to your WhatsApp contacts.</Typography>\r\n            </DescriptionContainer>\r\n            <BoxWrapper>\r\n                <Typography>About</Typography>\r\n                <Typography>Eat! Sleep! Code! Repeat</Typography>\r\n            </BoxWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile;","\r\nimport { styled, Drawer, Box, Typography } from '@mui/material';\r\nimport { ArrowBack } from '@mui/icons-material';\r\n\r\n//components\r\nimport Profile from './Profile';\r\n\r\nconst Header = styled(Box)`\r\n  background: #008069;\r\n  height: 107px;\r\n  color: #FFFFFF;\r\n  display: flex;\r\n  & > svg, & > p {\r\n    margin-top: auto;\r\n    padding: 15px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst Component = styled(Box)`\r\n  background: #ededed;\r\n  height: 85%;\r\n`;\r\n\r\nconst Text = styled(Typography)`\r\n    font-size: 18px;\r\n`\r\n\r\nconst drawerStyle = {\r\n    left: 20,\r\n    top: 17,\r\n    height: '95%',\r\n    width: '30%',\r\n    boxShadow: 'none'\r\n}\r\n\r\nconst InfoDrawer = ({ open, setOpen, profile }) => {\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Drawer\r\n            open={open}\r\n            onClose={handleClose}\r\n            PaperProps={{ sx: drawerStyle }}\r\n            style={{ zIndex: 1500 }}\r\n        >\r\n            <Header>\r\n                <ArrowBack onClick={() => setOpen(false)} />\r\n                <Text>Profile</Text>\r\n            </Header>\r\n            <Component>\r\n                {profile && <Profile />}\r\n            </Component>\r\n        </Drawer>\r\n    );\r\n}\r\n\r\nexport default InfoDrawer;","import { useState, useContext } from \"react\";\r\n\r\nimport { MoreVert } from \"@mui/icons-material\";\r\nimport { Menu, MenuItem, styled } from \"@mui/material\";\r\n\r\nimport { googleLogout } from \"@react-oauth/google\";\r\nimport { AccountContext } from \"../../../Context/AccountProvider\";\r\nimport { UserContext } from \"../../../Context/UserProvider\";\r\n\r\nimport { clientId } from \"../../../Constants/data\";\r\n\r\n//components\r\nimport InfoDrawer from \"../../drawer/Drawer.jsx\";\r\n\r\nconst MenuOption = styled(MenuItem)`\r\n    font-size: 14px\r\n    padding: 15px 60px 5px 24px;\r\n    color: #4A4A4A;\r\n`;\r\n\r\nconst Logout = styled(googleLogout)`\r\n  border: none;\r\n  box-shadow: none;\r\n`;\r\n\r\nconst HeaderMenu = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n\r\n  const {\r\n    setAccount,\r\n    setShowloginButton,\r\n    showlogoutButton,\r\n    setShowlogoutButton,\r\n  } = useContext(AccountContext);\r\n  const { setPerson } = useContext(UserContext);\r\n\r\n  const handleClick = (event) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const onSignoutSuccess = () => {\r\n    alert(\"You have been logged out successfully\");\r\n    console.clear();\r\n    setShowlogoutButton(false);\r\n    setShowloginButton(true);\r\n    setAccount(\"\");\r\n    setPerson({});\r\n  };\r\n\r\n  const toggleDrawer = () => {\r\n    setOpenDrawer(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MoreVert onClick={handleClick} />\r\n      <Menu\r\n        anchorEl={open}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\",\r\n        }}\r\n      >\r\n        <MenuOption\r\n          onClick={() => {\r\n            handleClose();\r\n            toggleDrawer();\r\n          }}\r\n        >\r\n          Profile\r\n        </MenuOption>\r\n        <MenuOption\r\n          onClick={() => {\r\n            handleClose();\r\n          }}\r\n        >\r\n          {/* { showlogoutButton ?\r\n                    <Logout\r\n                        clientId={clientId}\r\n                        buttonText=\"Logout\"\r\n                        onLogoutSuccess={onSignoutSuccess}\r\n                    >\r\n                    </Logout> : null\r\n                } */}\r\n        </MenuOption>\r\n      </Menu>\r\n      <InfoDrawer open={openDrawer} setOpen={setOpenDrawer} profile={true} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderMenu;\r\n","import { useContext, useState } from \"react\";\r\n\r\nimport { Box, styled } from \"@mui/material\";\r\nimport { Chat as MessageIcon } from \"@mui/icons-material\";\r\n\r\nimport { AccountContext } from \"../../../Context/AccountProvider\";\r\n\r\n//components\r\nimport HeaderMenu from \"./HeaderMenu.jsx\";\r\nimport InfoDrawer from \"../../drawer/Drawer.jsx\";\r\n\r\nconst Component = styled(Box)`\r\n  height: 44px;\r\n  background: #ededed;\r\n  display: flex;\r\n  padding: 8px 16px;\r\n  align-items: center;\r\n`;\r\n\r\nconst Wrapper = styled(Box)`\r\n  margin-left: auto;\r\n  & > * {\r\n    margin-left: 2px;\r\n    padding: 8px;\r\n    color: #000;\r\n  }\r\n  & :first-child {\r\n    font-size: 22px;\r\n    margin-right: 8px;\r\n    margin-top: 3px;\r\n  }\r\n`;\r\n\r\nconst Image = styled(\"img\")({\r\n  height: 40,\r\n  width: 40,\r\n  borderRadius: \"50%\",\r\n});\r\n\r\nconst Header = () => {\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n\r\n  const { account } = useContext(AccountContext);\r\n\r\n  const toggleDrawer = () => {\r\n    setOpenDrawer(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Component>\r\n        <Image src={account.picture} onClick={() => toggleDrawer()} />\r\n        <Wrapper>\r\n          <MessageIcon />\r\n          <HeaderMenu />\r\n        </Wrapper>\r\n      </Component>\r\n      <InfoDrawer open={openDrawer} setOpen={setOpenDrawer} profile={true} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Box, InputBase, styled } from '@mui/material';\r\nimport { Search as SearchIcon } from '@mui/icons-material';\r\n\r\nconst Component = styled(Box)`\r\n    background: #fff;\r\n    height: 45px;\r\n    display: flex;\r\n    align-items: center;\r\n    border-bottom: 1px solid #F2F2F2;\r\n`;\r\n\r\nconst Wrapper = styled(Box)`\r\n    position: relative;\r\n    border-radius: 10px;\r\n    background-color: #f0f2f5;\r\n    margin: 0 13px;\r\n    width: 100%;\r\n`;\r\n\r\nconst Icon = styled(Box)`\r\n    color: #919191;\r\n    padding: 8px;\r\n    height: 100%;\r\n    position: absolute;\r\n`;\r\n      \r\nconst InputField = styled(InputBase) `\r\n    width: 100%;\r\n    padding: 16px;\r\n    padding-left: 65px;\r\n    font-size: 14px;\r\n    height: 15px;\r\n    width: 100%;\r\n`;\r\n\r\nconst Search = ({ setText }) => {\r\n\r\n    return (\r\n        <Component>\r\n            <Wrapper>\r\n                <Icon>\r\n                    <SearchIcon fontSize=\"small\"/>\r\n                </Icon>\r\n                <InputField\r\n                    placeholder=\"Search or start new chat\"\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                />\r\n            </Wrapper>\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default Search;","import axios from 'axios';\r\n\r\nconst url = 'http://localhost:4000';\r\n\r\nexport const addUser = async (data) => {\r\n    try {\r\n        let response = await axios.post(`${url}/add`, data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling addUser API ', error);\r\n    }\r\n}\r\n\r\nexport const getUsers = async () => {\r\n    try {\r\n        let response = await axios.get(`${url}/users`);\r\n        return response.data\r\n    } catch (error) {\r\n        console.log('Error while calling getUsers API ', error);\r\n    }\r\n}\r\n\r\nexport const setConversation = async (data) => {\r\n    try {\r\n        await axios.post(`${url}/conversation/add`, data);\r\n    } catch (error) {\r\n        console.log('Error while calling setConversation API ', error);\r\n    }\r\n}\r\n\r\nexport const getConversation = async (users) => {\r\n    try {\r\n        let response = await axios.post(`${url}/conversation/get`, users);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling getConversation API ', error);\r\n    }\r\n}\r\n\r\nexport const getMessages = async (id) => {\r\n    try {\r\n        let response = await axios.get(`${url}/message/get/${id}`);\r\n        return response.data\r\n    } catch (error) {\r\n        console.log('Error while calling getMessages API ', error);\r\n    }\r\n}\r\n\r\nexport const newMessages = async (data) => {\r\n    try {\r\n        return await axios.post(`${url}/message/add`, data);\r\n    } catch (error) {\r\n        console.log('Error while calling newConversations API ', error);\r\n    }\r\n}\r\n\r\nexport const uploadFile = async (data) => {\r\n    try {\r\n        return await axios.post(`${url}/file/upload`, data);\r\n    } catch (error) {\r\n        console.log('Error while calling newConversations API ', error);\r\n    }\r\n}","\r\nexport const downloadMedia = async (e, originalImage) => {\r\n  e.preventDefault();\r\n  try {\r\n      fetch(originalImage)\r\n      .then(resp => resp.blob())\r\n      .then(blob => {\r\n          const url = window.URL.createObjectURL(blob);\r\n          const a = document.createElement('a');\r\n          a.style.display = 'none';\r\n          a.href = url;\r\n\r\n          const nameSplit = originalImage.split(\"/\");\r\n          const duplicateName = nameSplit.pop();\r\n\r\n          // the filename you want\r\n          a.download = \"\" + duplicateName + \"\";\r\n          document.body.appendChild(a);\r\n          a.click();\r\n          window.URL.revokeObjectURL(url);\r\n      })\r\n      .catch((error) => console.log('Error while downloading the image ', error))\r\n\r\n  } catch (error) {\r\n      console.log('Error while downloading the image ', error);\r\n  }\r\n}\r\n\r\nexport const formatDate = (date) => {\r\n  const hours = new Date(date).getHours();\r\n  const minutes = new Date(date).getMinutes();\r\n  return `${hours < 10 ? '0' + hours : hours}:${minutes < 10 ? '0' + minutes : minutes}`;\r\n}","import { useContext, useEffect, useState } from 'react';\r\n\r\nimport { styled, Box, Typography } from \"@mui/material\";\r\n\r\nimport { UserContext } from '../../../Context/UserProvider';\r\nimport { AccountContext } from '../../../Context/AccountProvider';\r\n\r\nimport { setConversation, getConversation } from '../../../Service/api';\r\nimport { emptyProfilePicture } from '../../../Constants/data';\r\nimport { formatDate } from '../../../utils/common-utils';\r\n\r\nconst Component = styled(Box)`\r\n    height: 45px;\r\n    display: flex;\r\n    padding: 13px 0;\r\n    cursor: pointer;\r\n`;\r\n    \r\nconst Image = styled('img') ({\r\n    width: 50,\r\n    height: 50,\r\n    objectFit: 'cover',\r\n    borderRadius: '50%',\r\n    padding: '0 14px'\r\n});\r\n\r\nconst Container = styled(Box)`\r\n    display: flex;\r\n`;\r\n\r\nconst Timestamp = styled(Typography)`\r\n    font-size: 12px;\r\n    margin-left: auto;\r\n    color: #00000099;\r\n    margin-right: 20px;\r\n`;\r\n\r\nconst Text = styled(Typography)`\r\n    display: block;\r\n    color: rgba(0, 0, 0, 0.6);\r\n    font-size: 14px;\r\n`;\r\n\r\nconst Conversation = ({ user }) => {\r\n    const url = user.picture || emptyProfilePicture;\r\n    \r\n    const { setPerson } = useContext(UserContext);\r\n    const { account, newMessageFlag }  = useContext(AccountContext);\r\n\r\n    const [message, setMessage] = useState({});\r\n\r\n    useEffect(() => {\r\n        const getConversationMessage = async() => {\r\n            const data = await getConversation({ senderId: account.sub, receiverId: user.sub });\r\n            setMessage({ text: data?.message, timestamp: data?.updatedAt });\r\n        }\r\n        getConversationMessage();\r\n    }, [newMessageFlag]);\r\n\r\n    const getUser = async () => {\r\n        setPerson(user);\r\n        await setConversation({ senderId: account.sub, receiverId: user.sub });\r\n    }\r\n\r\n    return (\r\n        <Component onClick={() => getUser()}>\r\n            <Box>\r\n                <Image src={url} alt=\"display picture\" />\r\n            </Box>\r\n            <Box style={{width: '100%'}}>\r\n                <Container>\r\n                    <Typography>{user.name}</Typography>\r\n                    { \r\n                        message?.text && \r\n                        <Timestamp>{formatDate(message?.timestamp)}</Timestamp>        \r\n                    }\r\n                </Container>\r\n                <Box>\r\n                    <Text>{message?.text?.includes('localhost') ? 'media' : message.text}</Text>\r\n                </Box>\r\n            </Box>\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default Conversation;","export const clientId = '1051426514050-dv0o9fu9umand32ov9iqcamvuf9gttta.apps.googleusercontent.com'\r\n\r\nexport const iconPDF = 'https://cdn4.iconfinder.com/data/icons/logos-and-brands/512/27_Pdf_File_Type_Adobe_logo_logos-512.png';\r\nexport const defaultProfilePicture = 'https://static.straitstimes.com.sg/s3fs-public/articles/2020/12/01/af_moneyheist_011220.jpg';\r\nexport const emptyChatImage = 'https://i.gadgets360cdn.com/large/whatsapp_multi_device_support_update_image_1636207150180.jpg';\r\nexport const qrCodeImage = 'https://www.ginifab.com/feeds/qr_code/img/qrcode.jpg';\r\nexport const emptyProfilePicture = 'https://www.kindpng.com/picc/m/78-785827_user-profile-avatar-login-account-male-user-icon.png';","import { useState, useEffect, useContext } from 'react';\r\n\r\nimport { Box, styled, Divider } from '@mui/material';\r\n\r\nimport { AccountContext } from '../../../Context/AccountProvider';\r\n\r\n//components\r\nimport Conversation from './Conversation.jsx';\r\nimport { getUsers } from '../../../Service/api';\r\n\r\nconst Component = styled(Box)`\r\n    overflow: overlay;\r\n    height: 81vh;\r\n`;\r\n\r\nconst StyledDivider = styled(Divider)`\r\n    margin: 0 0 0 70px;\r\n    background-color: #e9edef;\r\n    opacity: .6;\r\n`;\r\n\r\nconst Conversations = ({ text }) => {\r\n    const [users, setUsers] = useState([]);\r\n    \r\n    const { account, socket, setActiveUsers } = useContext(AccountContext);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            let data = await getUsers();\r\n            let fiteredData = data.filter(user => user.name.toLowerCase().includes(text.toLowerCase()));\r\n            setUsers(fiteredData);\r\n        }\r\n        fetchData();\r\n    }, [text]);\r\n\r\n    useEffect(() => {\r\n        socket.current.emit('addUser', account);\r\n        socket.current.on(\"getUsers\", users => {\r\n            setActiveUsers(users);\r\n        })\r\n    }, [account])\r\n\r\n    return (\r\n        <Component>\r\n            {\r\n                users && users.map((user, index) => (\r\n                    user.sub !== account.sub && \r\n                        <>\r\n                            <Conversation user={user} />\r\n                            {\r\n                                users.length !== (index + 1)  && <StyledDivider />\r\n                            }\r\n                        </>\r\n                ))\r\n            }\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default Conversations;","import { useState } from 'react';\r\n\r\nimport { Box } from '@mui/material';\r\n\r\n//components\r\nimport Header from './Header.jsx';\r\nimport Search from './Search.jsx';\r\nimport Conversations from './Conversations.jsx';\r\n\r\nconst Menu = () => {\r\n    const [text, setText] = useState('');\r\n    \r\n    return (\r\n        <Box>\r\n            <Header/>\r\n            <Search setText={setText} />\r\n            <Conversations text={text} />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Menu;","import { useContext } from 'react';\r\n\r\nimport { Box, Typography, styled } from '@mui/material';\r\nimport { Search, MoreVert } from '@mui/icons-material';\r\n\r\nimport { AccountContext } from '../../../Context/AccountProvider';\r\nimport { defaultProfilePicture } from '../../../Constants/data';\r\n\r\nconst Header = styled(Box)`\r\n    height: 44px;\r\n    background: #ededed;\r\n    display: flex;\r\n    padding: 8px 16px;\r\n    align-items: center;\r\n`;\r\n    \r\nconst Image = styled('img')({\r\n    width: 40,\r\n    height: 40,\r\n    objectFit: 'cover',\r\n    borderRadius: '50%'\r\n})\r\n\r\nconst Name = styled(Typography)`\r\n    margin-left: 12px !important;\r\n`;\r\n\r\nconst RightContainer = styled(Box)`\r\n    margin-left: auto;\r\n    & > svg {\r\n        padding: 8px;\r\n        font-size: 22px;\r\n        color: #000;\r\n    }\r\n`;\r\n\r\nconst Status = styled(Typography)`\r\n    font-size: 12px !important;\r\n    color: rgb(0, 0, 0, 0.6);\r\n    margin-left: 12px !important;\r\n`;\r\n\r\nconst ChatHeader = ({ person }) => {  \r\n\r\n    const url = person.picture || defaultProfilePicture;\r\n    \r\n    const { activeUsers } = useContext(AccountContext);\r\n\r\n    return (\r\n        <Header>\r\n            <Image src={url} alt=\"display picture\" />     \r\n            <Box>\r\n                <Name>{person.name}</Name>\r\n                <Status>{activeUsers?.find(user => user.sub === person.sub) ? 'Online' : \"Offline\" }</Status>    \r\n            </Box>   \r\n            <RightContainer>\r\n                <Search />\r\n                <MoreVert />\r\n\r\n            </RightContainer> \r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default ChatHeader;","import { useContext } from 'react';\r\n\r\nimport { Box, styled, Typography } from '@mui/material';\r\nimport { GetApp as GetAppIcon } from '@mui/icons-material';\r\n\r\nimport { AccountContext } from '../../../Context/AccountProvider';\r\n\r\nimport { downloadMedia, formatDate } from '../../../utils/common-utils.js';\r\nimport { iconPDF } from '../../../Constants/data';\r\n\r\nconst Wrapper = styled(Box)`\r\n    background: #FFFFFF;\r\n    padding: 5px;\r\n    max-width: 60%;\r\n    width: fit-content;\r\n    display: flex;\r\n    border-radius: 10px;\r\n    word-break: break-word;\r\n`;\r\n    \r\nconst Own = styled(Box)`\r\n    background: #dcf8c6;\r\n    padding: 5px;\r\n    max-width: 60%;\r\n    width: fit-content;\r\n    margin-left: auto;\r\n    display: flex;\r\n    border-radius: 10px;\r\n    word-break: break-word;\r\n`;\r\n\r\nconst Text = styled(Typography)`\r\n    font-size: 14px;\r\n    padding: 0 25px 0 5px;\r\n`;\r\n\r\nconst Time = styled(Typography)`\r\n    font-size: 10px;\r\n    color: #919191;\r\n    margin-top: 6px;\r\n    word-break: keep-all;\r\n    margin-top: auto;\r\n`;\r\n\r\nconst Message = ({ message }) => {\r\n    const { account } = useContext(AccountContext);\r\n\r\n    return (\r\n        <>\r\n        {\r\n            account.sub === message.senderId ? \r\n                <Own>\r\n                    {\r\n                        message.type === 'file' ? <ImageMessage message={message} /> : <TextMessage message={message} />\r\n                    }\r\n                </Own>\r\n            : \r\n                <Wrapper>\r\n                    {\r\n                        message.type === 'file' ? <ImageMessage message={message} /> : <TextMessage message={message} />\r\n                    }\r\n                </Wrapper>\r\n        }\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nconst TextMessage = ({ message }) => {\r\n    \r\n    return (\r\n        <>\r\n            <Text>{message.text}</Text>\r\n            <Time>{formatDate(message.createdAt)}</Time>\r\n        </>\r\n    )\r\n}\r\n\r\nconst ImageMessage = ({ message }) => {\r\n\r\n    return (\r\n        <div style={{ position: 'relative' }}>\r\n            {\r\n                message?.text?.includes('.pdf') ?\r\n                    <div style={{ display: 'flex' }}>\r\n                        <img src={iconPDF} alt=\"pdf-icon\" style={{ width: 80 }} />\r\n                        <Typography style={{ fontSize: 14 }} >{message.text.split(\"/\").pop()}</Typography>\r\n                    </div>\r\n                : \r\n                    <img style={{ width: 300, height: '100%', objectFit: 'cover' }} src={message.text} alt={message.text} />\r\n            }\r\n            <Time style={{ position: 'absolute', bottom: 0, right: 0 }}>\r\n                <GetAppIcon \r\n                    onClick={(e) => downloadMedia(e, message.text)} \r\n                    fontSize='small' \r\n                    style={{ marginRight: 10, border: '1px solid grey', borderRadius: '50%' }} \r\n                />\r\n                {formatDate(message.createdAt)}\r\n            </Time>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import { useEffect } from 'react';\r\n\r\nimport { EmojiEmotions, AttachFile, Mic } from '@mui/icons-material';\r\nimport { Box, styled, InputBase } from '@mui/material';\r\n\r\nimport { uploadFile } from '../../../Service/api';\r\n\r\nconst Container = styled(Box)`\r\n    height: 55px;\r\n    background: #ededed;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 15px;\r\n    &  > * {\r\n        margin: 5px;\r\n        color: #919191;\r\n    }\r\n`;\r\n\r\nconst Search = styled(Box)`\r\n    border-radius: 18px;\r\n    background-color: #FFFFFF;\r\n    width: calc(94% - 100px);\r\n`;\r\n\r\nconst InputField = styled(InputBase)`\r\n    width: 100%;\r\n    padding: 20px;\r\n    padding-left: 25px;\r\n    font-size: 14px;\r\n    height: 20px;\r\n    width: 100%;\r\n`;\r\n\r\nconst ClipIcon = styled(AttachFile)`\r\n    transform: 'rotate(40deg)'\r\n`;\r\n\r\n\r\nconst Footer = ({ sendText, value, setValue, setFile, file, setImage }) => {\r\n\r\n    useEffect(() => {\r\n        const getImage = async () => {\r\n            if (file) {\r\n                const data = new FormData();\r\n                data.append(\"name\", file.name);\r\n                data.append(\"file\", file);\r\n\r\n                const response = await uploadFile(data);\r\n                setImage(response.data);\r\n            }\r\n        }\r\n        getImage();\r\n    }, [file])\r\n\r\n    const onFileChange = (e) => {\r\n        setValue(e.target.files[0].name);\r\n        setFile(e.target.files[0]);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <EmojiEmotions />\r\n            <label htmlFor=\"fileInput\">\r\n                <ClipIcon />\r\n            </label>\r\n            <input\r\n                type='file'\r\n                id=\"fileInput\"\r\n                style={{ display: 'none' }}\r\n                onChange={(e) => onFileChange(e)}\r\n            />\r\n\r\n            <Search>\r\n                <InputField\r\n                    placeholder=\"Type a message\"\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                    onKeyPress={(e) => sendText(e)}\r\n                    value={value}\r\n                />\r\n            </Search>\r\n            <Mic />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Footer;","import { useState, useEffect, useContext, useRef } from 'react';\r\nimport { Box, styled } from '@mui/material';\r\n\r\nimport { io } from 'socket.io-client';\r\n\r\nimport { getMessages, newMessages } from '../../../Service/api';\r\nimport { AccountContext } from '../../../Context/AccountProvider';\r\n\r\n//components\r\nimport Message from './Message.jsx';\r\nimport Footer from './Footer.jsx';\r\n\r\nconst Wrapper = styled(Box)`\r\n    background-image: url(${'https://user-images.githubusercontent.com/15075759/28719144-86dc0f70-73b1-11e7-911d-60d70fcded21.png'});\r\n    background-size: 50%;\r\n`;\r\n\r\nconst StyledFooter = styled(Box)`\r\n    height: 55px;\r\n    background: #ededed;\r\n    // position: absolute;\r\n    width: 100%;\r\n    // bottom: 0\r\n`;\r\n    \r\nconst Component = styled(Box)`\r\n    height: 80vh;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst Container = styled(Box)`\r\n    padding: 1px 80px;\r\n`;\r\n\r\n\r\n\r\nconst Messages = ({ person, conversation }) => {\r\n\r\n    const [messages, setMessages] = useState([]);\r\n    const [incomingMessage, setIncomingMessage] = useState(null);\r\n    const [value, setValue] = useState();\r\n    const [file, setFile] = useState();\r\n    const [image, setImage] = useState();\r\n\r\n    const scrollRef = useRef();\r\n\r\n    const { account, socket, newMessageFlag, setNewMessageFlag } = useContext(AccountContext);\r\n\r\n    useEffect(() => {\r\n        socket.current.on('getMessage', data => {\r\n            setIncomingMessage({\r\n                ...data,\r\n                createdAt: Date.now()\r\n            })\r\n        })\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        const getMessageDetails = async () => {\r\n            let data = await getMessages(conversation?._id);\r\n            setMessages(data);\r\n        }\r\n        getMessageDetails();\r\n    }, [conversation?._id, person._id, newMessageFlag]);\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({ transition: \"smooth\" })\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        incomingMessage && conversation?.members?.includes(incomingMessage.senderId) && \r\n            setMessages((prev) => [...prev, incomingMessage]);\r\n        \r\n    }, [incomingMessage, conversation]);\r\n\r\n    const receiverId = conversation?.members?.find(member => member !== account.sub);\r\n    \r\n    const sendText = async (e) => {\r\n        let code = e.keyCode || e.which;\r\n        if(!value) return;\r\n\r\n        if(code === 13) { \r\n            let message = {};\r\n            if (!file) {\r\n                message = {\r\n                    senderId: account.sub,\r\n                    receiverId: receiverId,\r\n                    conversationId: conversation._id,\r\n                    type: 'text',\r\n                    text: value\r\n                };\r\n            } else {\r\n                message = {\r\n                    senderId: account.sub,\r\n                    conversationId: conversation._id,\r\n                    receiverId: receiverId,\r\n                    type: 'file',\r\n                    text: image\r\n                };\r\n            }\r\n\r\n            socket.current.emit('sendMessage', message);\r\n\r\n            await newMessages(message);\r\n\r\n            setValue('');\r\n            setFile();\r\n            setImage('');\r\n            setNewMessageFlag(prev => !prev);\r\n        } \r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Component>\r\n                {\r\n                    messages && messages.map(message => (\r\n                        <Container ref={scrollRef}>\r\n                            <Message message={message} />\r\n                        </Container>\r\n                    ))\r\n                }\r\n            </Component>\r\n            <Footer \r\n                sendText={sendText} \r\n                value={value} \r\n                setValue={setValue} \r\n                setFile={setFile} \r\n                file={file} \r\n                setImage={setImage}\r\n            />\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Messages;","import { useContext, useState, useEffect } from 'react';\r\n\r\nimport { Box } from '@mui/material';\r\n\r\nimport { UserContext } from '../../../Context/UserProvider';\r\nimport { AccountContext } from '../../../Context/AccountProvider';\r\nimport { getConversation } from '../../../Service/api';\r\n\r\n//components\r\nimport ChatHeader from './ChatHeader.jsx';\r\nimport Messages from './Messages.jsx';\r\n\r\nconst ChatBox = () => {\r\n    const { person } = useContext(UserContext);\r\n    const { account } = useContext(AccountContext);\r\n\r\n    const [conversation, setConversation] = useState({});\r\n    \r\n    useEffect(() => {\r\n        const getConversationDetails = async () => {\r\n            let data = await getConversation({ senderId: account.sub, receiverId: person.sub });\r\n            setConversation(data);\r\n        }\r\n        getConversationDetails();\r\n    }, [person.sub]);\r\n\r\n    return (\r\n        <Box style={{height: '75%'}}>\r\n            <ChatHeader person={person} />\r\n            <Messages person={person} conversation={conversation} />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChatBox;","import { Box, styled, Typography, Divider } from '@mui/material';\r\n\r\nimport { emptyChatImage } from '../../../Constants/data';\r\n\r\nconst Component = styled(Box)`\r\n    background: #f8f9fa;\r\n    padding: 30px 0;\r\n    text-align: center;\r\n    height: 100%;\r\n`;\r\n\r\nconst Container = styled(Box)`\r\n    padding: 0 200px;\r\n`;\r\n    \r\nconst Image = styled('img')({\r\n    marginTop: 100,\r\n    width: 400\r\n})\r\n   \r\nconst Title = styled(Typography)`\r\n    font-size: 32px;\r\n    font-family: inherit;\r\n    font-weight: 300;\r\n    color: #41525d;\r\n    margin-top: 25px 0 10px 0;\r\n`;\r\n\r\nconst SubTitle = styled(Typography)`\r\n    font-size: 14px;\r\n    color: #667781;\r\n    font-weight: 400;\r\n    font-family: inherit;\r\n`;\r\n\r\nconst StyledDivider = styled(Divider)`\r\n    margin: 40px 0;\r\n    opacity: 0.4;\r\n`;\r\n\r\nconst EmptyChat = () => {\r\n    \r\n    return (\r\n        <Component>\r\n            <Container>\r\n                <Image src={emptyChatImage} alt=\"empty\" />\r\n                <Title>WhatsApp Web</Title>\r\n                <SubTitle>Now send and receive messages without keeping your phone online.</SubTitle>\r\n                <SubTitle>Use WhatsApp on up to 4 linked devices and 1 phone at the same time. </SubTitle>\r\n                <StyledDivider />\r\n            </Container>\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default EmptyChat;","\r\nimport { useContext } from 'react';\r\nimport { Dialog, styled, Box } from '@mui/material';\r\n\r\nimport { UserContext } from '../../Context/UserProvider';\r\n\r\n//components\r\nimport Menu from './menu/Menu.jsx';\r\nimport ChatBox from './Chat/ChatBox.jsx';\r\nimport EmptyChat from './Chat/EmptyChat.jsx';\r\n\r\nconst Component = styled(Box)`\r\n    display: flex;\r\n`;\r\n    \r\nconst LeftComponent = styled(Box)`\r\n    min-width: 450px;\r\n`;\r\n    \r\nconst RightComponent = styled(Box)`\r\n    width: 73%;\r\n    min-width: 300px;\r\n    height: 100%;\r\n    border-left: 1px solid rgba(0, 0, 0, 0.14);\r\n`;\r\n\r\nconst dialogStyle = {\r\n    height: '95%',\r\n    width: '100%',\r\n    margin: '20px',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n    borderRadius: 0,\r\n    boxShadow: 'none',\r\n    overflow: 'hidden'\r\n};\r\n\r\nconst ChatDialog = () => {\r\n\r\n    const { person } = useContext(UserContext);\r\n    \r\n    return (\r\n        <Dialog \r\n            open={true} \r\n            BackdropProps={{style: {backgroundColor: 'unset'}}}\r\n            PaperProps={{ sx: dialogStyle }}\r\n            maxWidth={'md'}\r\n        >\r\n            <Component>\r\n                <LeftComponent>\r\n                    <Menu/>\r\n                </LeftComponent>\r\n                <RightComponent>\r\n                    {\r\n                        Object.keys(person).length  ? <ChatBox/> : <EmptyChat />\r\n                    }\r\n                </RightComponent>\r\n            </Component>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default ChatDialog;","import { useContext } from 'react';\r\n\r\nimport { Dialog, Typography, List, ListItem, Box, styled } from '@mui/material';\r\n\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { addUser } from '../../Service/api';\r\nimport { AccountContext } from '../../Context/AccountProvider';\r\nimport { qrCodeImage } from '../../Constants/data';\r\n\r\nconst Component = styled(Box)`\r\n    display: flex; \r\n`;\r\n\r\nconst Container = styled(Box)`\r\npadding: 56px 0 56px 56px;\r\n`;\r\n\r\nconst QRCOde = styled('img')({\r\n    margin: '50px 0 0 50px',\r\n    height: 264,\r\n    width: 264\r\n\r\n});\r\n\r\nconst Title = styled(Typography)`\r\n    font-size: 26px;\r\n    margin-bottom: 25px;\r\n    color: #525252;\r\n    font-family: Segoe UI,Helvetica Neue,Helvetica,Lucida Grande,Arial,Ubuntu,Cantarell,Fira Sans,sans-serif;\r\n    font-weight: 300;\r\n`;\r\n\r\nconst StyledList = styled(List)`\r\n    &  > li {\r\n        padding: 0;\r\n        margin-top: 15px;\r\n        font-size: 18px;\r\n        line-height: 28px;\r\n        color: #4a4a4a;\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst dialogStyle = {\r\n    marginTop: '12%',\r\n    height: '95%',\r\n    width: '60%',\r\n    maxWidth: '100',\r\n    maxHeight: '100%',\r\n    borderRadius: 0,\r\n    boxShadow: 'none',\r\n    overflow: 'hidden'\r\n}\r\n\r\nconst LoginDialog = () => {\r\n\r\n    const { setAccount,showloginButton, setShowloginButton, setShowlogoutButton } = useContext(AccountContext);\r\n\r\n    const onLoginSuccess = async (res) => {\r\n        let decoded = jwt_decode(res.credential);\r\n        setAccount(decoded);\r\n        setShowloginButton(false);\r\n        setShowlogoutButton(true);\r\n        await addUser(decoded);\r\n    };\r\n\r\n    const onLoginFailure = (res) => {\r\n        console.log('Login Failed:', res);\r\n    };\r\n\r\n    // const onSignoutSuccess = () => {\r\n    //     alert(\"You have been logged out successfully\");\r\n    //     console.clear();\r\n    //     setShowloginButton(true);\r\n    //     setShowlogoutButton(false);\r\n    // };\r\n\r\n    return (\r\n        <Dialog\r\n            open={true}\r\n            BackdropProps={{style: {backgroundColor: 'unset'}}}\r\n            maxWidth={'md'}\r\n            PaperProps={{ sx: dialogStyle }}\r\n        >\r\n            <Component>\r\n                <Container>\r\n                    <Title>To use WhatsApp on your computer:</Title>\r\n                    <StyledList>\r\n                        <ListItem>1. Open WhatsApp on your phone</ListItem>\r\n                        <ListItem>2. Tap Menu Settings and select WhatsApp Web</ListItem>\r\n                        <ListItem>3. Point your phone to this screen to capture the code</ListItem>\r\n                    </StyledList>\r\n                </Container>\r\n                <Box style={{position:'relative'}}>\r\n                    <QRCOde src={qrCodeImage} alt=\"QR Code\" />\r\n                    <Box style={{position: 'absolute', top: '50%', transform: 'translateX(25%) translateY(-25%)'}}>\r\n                        { showloginButton ?\r\n                            <GoogleLogin\r\n                                buttonText=\"\"\r\n                                onSuccess={onLoginSuccess}\r\n                                onError={onLoginFailure}\r\n                            /> : null}\r\n                    </Box>\r\n                </Box>\r\n            </Component>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default LoginDialog;","\r\nimport { useContext } from 'react';\r\nimport { AppBar, Toolbar, styled, Box } from '@mui/material';\r\n\r\nimport { AccountContext } from '../Context/AccountProvider';\r\n\r\n//components\r\nimport ChatDialog from './Chat/ChatDialog.jsx';\r\nimport LoginDialog from './account/LoginDialog';\r\n\r\nconst Component = styled(Box)`\r\n    height: 100vh;\r\n    background: #DCDCDC;\r\n`;\r\n\r\nconst Header = styled(AppBar)`\r\n    background-color: #00A884;\r\n    height: 125px;\r\n    box-shadow: none;\r\n`;\r\n    \r\nconst LoginHeader = styled(AppBar)`\r\n    background: #00bfa5;\r\n    height: 200px;\r\n    box-shadow: none;\r\n`;\r\n\r\nconst Messenger = () => {\r\n    const { account } = useContext(AccountContext);\r\n    \r\n    return (\r\n        <Component>\r\n            {\r\n                account ? \r\n                <>\r\n                    <Header>\r\n                        <Toolbar></Toolbar>\r\n                    </Header>\r\n                    <ChatDialog />\r\n                </>\r\n                :\r\n                <>\r\n                    <LoginHeader>\r\n                        <Toolbar></Toolbar>\r\n                    </LoginHeader>\r\n                    <LoginDialog />\r\n                </>\r\n            }\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default Messenger;"],"names":["ImageContainer","styled","Box","Image","width","height","borderRadius","padding","BoxWrapper","DescriptionContainer","account","useContext","AccountContext","src","picture","alt","Typography","name","Header","Component","Text","drawerStyle","left","top","boxShadow","open","setOpen","profile","Drawer","onClose","PaperProps","sx","style","zIndex","ArrowBack","onClick","MenuOption","MenuItem","googleLogout","useState","openDrawer","setOpenDrawer","handleClose","setAccount","setShowloginButton","showlogoutButton","setShowlogoutButton","UserContext","setPerson","MoreVert","event","currentTarget","Menu","anchorEl","keepMounted","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Wrapper","Icon","InputField","InputBase","setText","fontSize","placeholder","inputProps","onChange","e","target","value","url","addUser","data","axios","response","console","log","getUsers","setConversation","getConversation","users","getMessages","id","newMessages","uploadFile","downloadMedia","originalImage","preventDefault","fetch","then","resp","blob","window","URL","createObjectURL","a","document","createElement","display","href","duplicateName","split","pop","download","body","appendChild","click","revokeObjectURL","catch","error","formatDate","date","hours","Date","getHours","minutes","getMinutes","objectFit","Container","Timestamp","user","newMessageFlag","message","setMessage","useEffect","getConversationMessage","senderId","sub","receiverId","text","timestamp","updatedAt","getUser","includes","StyledDivider","Divider","setUsers","socket","setActiveUsers","fetchData","fiteredData","filter","toLowerCase","current","emit","on","map","index","length","Name","RightContainer","Status","person","activeUsers","find","Own","Time","TextMessage","createdAt","ImageMessage","position","bottom","right","GetApp","marginRight","border","type","Search","ClipIcon","AttachFile","sendText","setValue","setFile","file","setImage","getImage","FormData","append","EmojiEmotions","htmlFor","files","onFileChange","onKeyPress","Mic","conversation","messages","setMessages","incomingMessage","setIncomingMessage","image","scrollRef","useRef","setNewMessageFlag","now","getMessageDetails","_id","scrollIntoView","transition","members","prev","member","code","keyCode","which","conversationId","ref","getConversationDetails","marginTop","Title","SubTitle","LeftComponent","RightComponent","dialogStyle","margin","maxWidth","maxHeight","overflow","Dialog","BackdropProps","backgroundColor","Object","keys","QRCOde","StyledList","List","showloginButton","onLoginSuccess","res","decoded","jwt_decode","credential","ListItem","transform","buttonText","onSuccess","onError","AppBar","LoginHeader","Toolbar"],"sourceRoot":""}